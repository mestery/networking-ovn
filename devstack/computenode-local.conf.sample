#
# Sample DevStack local.conf.
#
# This sample file is intended to be used when adding an additional compute node
# to your test environment.  It runs a very minimal set of services.
#
# For this configuration to work, you *must* set the SERVICE_HOST option to the
# IP address of the main DevStack host.  You must also set HOST_IP to the IP
# address of this host.
#

[[local|localrc]]

DATABASE_PASSWORD=password
RABBIT_PASSWORD=password
SERVICE_PASSWORD=password
SERVICE_TOKEN=password
ADMIN_PASSWORD=password

# The DevStack plugin defaults to using the ovn branch from the official ovs
# repo.  You can optionally use a different one.  For example, you may want to
# use the latest patches in blp's ovn branch:
#OVN_REPO=http://github.com/blp/ovs-reviews.git
#OVN_BRANCH=origin/ovn

enable_plugin networking-ovn http://git.openstack.org/openstack/networking-ovn

disable_all_services
enable_service n-cpu
enable_service ovn-controller

# For multi-node deployments, we recommend testing multiple instances of the
# DHCP and metadata agents. In a small lab environment with one controller
# node, you can run them on two or more compute nodes to simulate a more
# realistic environment. However, in a large lab that potentially simulates
# a production environment, you should determine whether to run them on
# controller nodes, network nodes, or some number of compute nodes.
#enable_service q-dhcp
#enable_service q-meta

# Set this to the address of the main DevStack host running the rest of the
# OpenStack services.
SERVICE_HOST=<IP address of host running everything else>
RABBIT_HOST=$SERVICE_HOST
Q_HOST=$SERVICE_HOST

# How to connect to ovsdb-server hosting the OVN databases.
OVN_REMOTE=tcp:$SERVICE_HOST:6640

# A UUID to uniquely identify this system.  If one is not specified, a random
# one will be generated and saved in the file 'ovn-uuid' for re-use in future
# DevStack runs.
#OVN_UUID=

# Whether or not to build custom openvswitch kernel modules from the ovs git
# tree. This is enabled by default.  This is required unless your distro kernel
# includes ovs+conntrack support.  This support was first released in Linux 4.3,
# and will likely be backported by some distros.
#OVN_BUILD_MODULES=True

HOST_IP=<IP address of current host>
NOVA_VNC_ENABLED=True
NOVNCPROXY_URL=http://$SERVICE_HOST:6080/vnc_auto.html
VNCSERVER_LISTEN=$HOST_IP
VNCSERVER_PROXYCLIENT_ADDRESS=$VNCSERVER_LISTEN

# If you enable the DHCP agent, configure it to provide a route for
# metadata to instances.
ENABLE_ISOLATED_METADATA=True

#git fetch https://mestery@review.openstack.org/a/openstack/neutron refs/changes/39/273439/9 && git checkout FETCH_HEAD
#NEUTRON_REPO=https://review.openstack.org/p/openstack/neutron
#NEUTRON_BRANCH=refs/changes/39/273439/10
#git fetch https://mestery@review.openstack.org/a/openstack/python-neutronclient refs/changes/42/272842/12 && git checkout FETCH_HEAD
#NEUTRONCLIENT_REPO=https://review.openstack.org/p/openstack/python-neutronclient
#NEUTRONCLIENT_BRANCH=refs/changes/42/272842/1
RECLONE=yes
